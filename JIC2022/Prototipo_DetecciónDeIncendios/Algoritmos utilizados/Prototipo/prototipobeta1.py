# -*- coding: utf-8 -*-
"""PrototipoBETA1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mSwitn6j_gbeIgYc1H0q_CUIvicmU9dQ
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import matplotlib.pyplot as plt
from keras.preprocessing.image import load_img, img_to_array
from keras.models import load_model
from google.colab import files
import cv2
import os

longitud, altura = 128,128
modelo= '/content/drive/MyDrive/Colab Notebooks/Modelo64.h5'
pesos= '/content/drive/MyDrive/Colab Notebooks/pesos.h5'
cnn=load_model(modelo)
cnn.load_weights(pesos)

#ventana = tk.Tk()
#ventana.title("Prototipo Beta1")
#ventana.geometry('500x500')
#ventana.configure(backgraund='dark turquoise')
#etiquetal=tk.Label(ventana,text="PROTOTIPO PARA LA DETECCIÃ“N DE INCENDIOS",fg="white")
#etiquetal.pack()
#ventana.mainloop()

uploaded = '/content/drive/MyDrive/ESP32-CAM/'
archivos = os.listdir(uploaded)

img_array = []
titulos_array = []

for i in range(0,len(archivos)):
  dirArchivo = uploaded + archivos[i]
  imBGR = cv2.imread(dirArchivo)
  imRGB = cv2.cvtColor(imBGR, cv2.COLOR_BGR2RGB)
  imRGB = cv2.resize(imRGB, (128,128))

  img_array.append(imRGB)

for i in range(0,len(archivos)):

    x1= img_array[i]
    x2=img_to_array(x1)
    x3=np.expand_dims(x2, axis=0)
    arreglo=cnn.predict(x3)
    resultado=arreglo[0]
    respuesta=np.argmax(resultado)

    if respuesta==0:
      #print('fuego') 
      plt.figure(figsize=(5,5))
      plt.xticks([])
      plt.yticks([])
      plt.grid(False)
      plt.imshow(x1, cmap=plt.cm.binary)
      plt.xlabel("Fuego", color='red')
      plt.show()

    if respuesta==1:
      #print('No fuego') 
      plt.figure(figsize=(5,5))
      plt.xticks([])
      plt.yticks([])
      plt.grid(False)
      plt.imshow(x1, cmap=plt.cm.binary)
      plt.xlabel("No Fuego", color='green')
      plt.show()